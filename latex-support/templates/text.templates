§ =============================================================
§  Text
§ =============================================================

§ -------------------------------------------------------------
§  Environments
§ -------------------------------------------------------------

§ the following file contains a list of environment names: environment_list
IncludeFile( 'environments.templates' )

== Text.environment == map:e, sc:e ==
|PickList( 'environment name', 'environment_list' )|
\begin{|PICK|}
<CURSOR><SPLIT>
\end{|PICK|}
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  Sectioning
§ -------------------------------------------------------------

== LIST: section_list == list, bare ==
part
chapter
section
subsection
subsubsection
paragraph
subparagraph
== ENDLIST ==

== Text.organization == expandmenu, noindent, insert, map:to, sc:o ==
|PickList( 'choose', [ 'frontmatter', 'mainmatter', 'backmatter', 'appendix' ] )|
\|PICK|<CURSOR>
== Text.section == expandmenu, noindent, insert, map:ts, sc:s ==
|PickList( 'choose', 'section_list' )|
\|PICK|{<CURSOR><SPLIT>}
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  Lists
§ -------------------------------------------------------------

== Text.list environment.description == map:tld, sc:d ==
\begin{description}
%
\item [<CURSOR>] <+ITEM+>
%
\item [] <+ITEM+>
%
\end{description}
== Text.list environment.enumerate == map:tle, sc:e ==
\begin{enumerate}
%
\item <CURSOR>
%
\item <+ITEM+>
%
\end{enumerate}
== Text.list environment.itemize == map:tli, sc:i ==
\begin{itemize}
%
\item <CURSOR>
%
\item <+ITEM+>
%
\end{itemize}
== Text.list environment.list == map:tll, sc:l ==
\begin{list}{<CURSOR>}{}
%
\item <+ITEM+>
%
\item <+ITEM+>
%
\end{list}
== ENDTEMPLATE ==

== Text.list environment.item == map:tlit, sc:i ==
\item <CURSOR>
== Text.list environment.item+label == map:tlil ==
\item [<CURSOR>] <+ITEM+>
== ENDTEMPLATE ==


§ -------------------------------------------------------------
§  Font
§ -------------------------------------------------------------
== LIST: font_style == dict ==
	'bf'     : 'textbf',
	'it'     : 'textit',
	'normal' : 'textnormal',
	'sc'     : 'textsc',
	'sf'     : 'textsf',
	'sl'     : 'textsl',
	'tt'     : 'texttt',
== LIST: font_size == list, bare  ==
	tiny
	scriptsize
	footnotesize
	small
	normalsize
	large
	Large
	LARGE
	huge
	Huge
== ENDLIST ==

== Text.font style == expandmenu, insert, map:tf ==
|PickList( 'stype', 'font_style' )|
\|PICK|{<CURSOR><SPLIT>}
== Text.font size == expandmenu, insert, map:tfs ==
|PickList( 'stype', 'font_size' )|
\|PICK|{<CURSOR><SPLIT>}
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  quotes
§ -------------------------------------------------------------
== LIST: text_quotes == hash ==
	'quotes, double' : "``<CURSOR><SPLIT>''",
	'quotes, single' : "`<CURSOR><SPLIT>'",
	'French, double' : '\flqq <CURSOR><SPLIT>\frqq{}',
	'French, single' : '\flq <CURSOR><SPLIT>\frq{}',
	'German, double' : '\glqq <CURSOR><SPLIT>\grqq{}',
	'German, single' : '\glq <CURSOR><SPLIT>\grq{}',
== ENDLIST ==

== Text.quotes == expandmenu, visual, insert, map:tq, sc:q ==
|PickList( 'choose', 'text_quotes' )|
|PICK|
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  spacing 
§ -------------------------------------------------------------
== LIST: text_spacing == hash ==
	'newpage'   : 'newpage<CURSOR>',
	'pagebreak' : 'pagebreak<CURSOR>',
	'newline'   : 'newline<CURSOR>',
	'linebreak' : 'linebreak<CURSOR>',
	'bigskip'   : 'bigskip<CURSOR>',
	'medskip'   : 'medskip<CURSOR>',
	'hspace'    : 'hspace{<CURSOR>mm}',
	'vspace'    : 'vspace{<CURSOR>mm}',
== ENDLIST ==

== Text.spacing == expandmenu, noindent, insert, map:tsp, sc:s ==
|PickList( 'choose', 'text_spacing' )|
\|VALUE|
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  line, alignment and spacing 
§ -------------------------------------------------------------
== LIST: linespacing == list, bare ==
flushleft
flushright
center
singlespace
onehalfspace
doublespace
quote
quotation
verse
verbatim
== ENDLIST ==

== Text.line alignment+spacing== expandmenu, noindent, map:tal, sc:a ==
|PickList( 'choose', 'linespacing' )|
\begin{|PICK|}
<CURSOR><SPLIT>
\end{|PICK|}
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  accents
§ -------------------------------------------------------------
== LIST: textaccents == dict ==
	'`{<CURSOR><SPLIT>}' : 'ò',
	"'{<CURSOR><SPLIT>}" : 'ó',
	'^{<CURSOR><SPLIT>}' : 'ô',
	'"{<CURSOR><SPLIT>}' : 'ö',
	'H{<CURSOR><SPLIT>}' : 'ő',
	'~{<CURSOR><SPLIT>}' : 'õ',
	'c{<CURSOR><SPLIT>}' : 'ç',
	'k{<CURSOR><SPLIT>}' : 'ą',
	'l{}<CURSOR><SPLIT>' : 'ł',
	'={<CURSOR><SPLIT>}' : 'ō',
	'b{<CURSOR><SPLIT>}' : 'o',
	'.{<CURSOR><SPLIT>}' : 'ȯ',
	'd{<CURSOR><SPLIT>}' : 'ụ',
	'r{<CURSOR><SPLIT>}' : 'å',
	'u{<CURSOR><SPLIT>}' : 'ŏ',
	'v{<CURSOR><SPLIT>}' : 'š',
	't{<CURSOR><SPLIT>}' : 'o͡o',
	'o{}<CURSOR><SPLIT>' : 'ø',
== ENDTEMPLATE ==

== Text.accents == expandmenu, visual, insert, map:tac, sc:a ==
|PickList( 'choose', 'textaccents' )|
\|KEY|
== ENDTEMPLATE ==

SetExpansion ( 'Text.accents', '\|KEY:T|', '|VALUE|' )

§ -------------------------------------------------------------
§  textcomp chars.
§ -------------------------------------------------------------
== LIST: textcomp == dict ==
	'asciiacute'  : '´',
	'asciitilde'  : '~',
	'backslash'   : '\',
	'bullet'      : '•',
	'celsius'     : '℃',
	'copyright'   : '©',
	'dagger'      : '†',
	'degree'      : '°',
	'div'         : '÷',
	'dollar'      : '$',
	'euro'        : '€',
	'onehalf'     : '½',
	'perthousand' : '؉',
	'pm'          : '±',
	'registered'  : '®',
	'section'     : '§',
	'tildelow'    : '~',
	'times'       : '⨉',
	'trademark'   : '™',
== ENDTEMPLATE ==

== Text.textcomp == expandmenu, expandleft:key, expandright:value, insert, map:ttc, sc:c ==
|PickList( 'choose', 'textcomp' )|
\text|KEY|<CURSOR>
== ENDTEMPLATE ==

== SEP: Text.sep1 == 

§ -------------------------------------------------------------
§  Label, Reference
§ -------------------------------------------------------------
== Text.bibitem == insert, map:tbi ==
\bibitem{<CURSOR>}
== Text.cite == insert, map:tci ==
\cite{<CURSOR>}
== Text.footnote == insert, map:tfo ==
\footnote{<CURSOR>}
== Text.index == insert, map:tin ==
\index{<CURSOR>}
== Text.label == insert, map:tla ==
\label{<CURSOR>}
== Text.marginpar == insert, map:tma ==
\marginpar{<CURSOR>}
== Text.newcommand == insert, map:tco ==
\newcommand{<CURSOR>}[1]{<+definition+>}
== Text.nocite == insert, map:tnc ==
\nocite{<CURSOR>}
== Text.pageref == insert, map:tpa ==
\pageref{<CURSOR>}
== Text.ref == insert, map:tre ==
\ref{<CURSOR>}
== Text.url == insert, map:tur ==
\url{<CURSOR><SPLIT>}
== ENDTEMPLATE ==

